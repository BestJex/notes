--------------------------------
shell							|
--------------------------------
	# 第一行指定运行的 bash
		#!/bin/bash
	
	# 运行方式
		* 直接运行(需要设置可执行权限:chdmo 775)
			./hello.sh

		* 以指定的shell运行脚本
		* 这种方式运行的脚本,第一行指定的解释器信息没用
			/bin/bash hello.sh
	
	# '#'开头的行就是注释,会被解释器忽略
	
	# 多行注释
		:<<EOF
			注释内容...
			注释内容...
			注释内容...
		EOF
		
		* EOF 也可以换做其他符号

		:<<'
			注释内容...
			注释内容...
			注释内容...
		'

		:<<!
			注释内容...
			注释内容...
			注释内容...
		!

	
--------------------------------
shell - 变量					|
--------------------------------
	# 定义规则
		* 变量名和等号之间不能有空格
		* 命名只能使用英文字母,数字和下划线,首个字符不能以数字开头
		* 中间不能有空格,可以使用下划线(_)
		* 不能使用标点符号
		*  不能使用bash里的关键字(可用help命令查看保留关键字)
	
	# 使用(读取)变量,使用 $ 符号
		name="KevinBlandy"
		echo $name
		echo${name}

		* 变量名外面的花括号是可选的,加不加都行
		* 加花括号是为了帮助解释器识别变量的边界,比如变量在字符串里面
			for skill in Java PHP Python; do
				echo "I am good at ${skill}"
			done
	
	# 变量可以被多次定义(修改)
		name="KevinBlandy"
		name="Litch"
	
	# 使用 readonly 关键字设置只读变量
		name="KevinBlandy"
		readonly name

		* 尝试修改name变量,会抛出异常
	
	# 使用 unset 删除变量
		name="KevinBlandy"
		unset name
	
	# 变量的作用域类型

		* 局部变量 局部变量在脚本或命令中定义,仅在当前shell实例中有效,其他shell启动的程序不能访问局部变量

		* 环境变量 所有的程序,包括shell启动的程序,都能访问环境变量,有些程序需要环境变量来保证其正常运行
		* 必要的时候shell脚本也可以定义环境变量

		* shell变量 shell变量是由shell程序设置的特殊变量
		* shell变量中有一部分是环境变量,有一部分是局部变量,这些变量保证了shell的正常运行
	

	# 后引号运算
		* 把``里面的内容当作命令去解析,返回执行的结果

		sum=`expr 15 + 15`
		echo $sum -> 30


	

