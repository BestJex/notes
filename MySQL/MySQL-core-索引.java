----------------------------
索引						|
----------------------------
	# 优点
		* 天生排序
		* 快速查找
	
	# 缺点
		* 占用空间
		* 降低更新表的速度
	
	# 小表使用全表扫描更快,中大表才使用索引,超级大表索引基本无效

	# 索引分类
		* 实现上说,分成 2 种
		
			1. 聚集索引
			
			2. 辅助索引(也叫二级索引或者非聚集索引)
	
		* 功能上说上说,分成 6 种

			1. 普通索引
				* 最基本的索引,没有任何约束

			2. 唯一索引
				* 与普通索引类似,但具有唯一性约束
				* 唯一索引可以为空,但是空值只能有一个

			3. 主键索引
				* 特殊的唯一索引,不允许有空值

			4. 复合索引
				* 将多个列组合在一起创建索引,可以覆盖多个列

			5. 外键索引
				* 只有InnoDB类型的表才可以使用外键索引,保证数据的一致性,完整性和实现级联操作

			6. 全文索引
				* MySQL 自带的全文索引只能用于 InnoDB、MyISAM ,并且只能对英文进行全文检索
				* 全文检索一般使用全文索引引擎(ES, Solr)来完成
	
	# Hash 索引

	# B+树索引
		* B树,是一个多路平衡查找树,相较于普通的二叉树,不会发生极度不平衡的状况,同时也是多路的
		* 他会将数据也保存在非页子节点
		* 一个节点可以拥有多于2个子节点的二叉查找树,与自平衡二叉查找树不同,B-树为系统最优化大块数据的读和写操作
		* B-tree算法减少定位记录时所经历的中间过程,从而加快存取速度,普遍运用在数据库和文件系统

		* MySql 的主键不能太大, 如果使用 UUID 这种,将会浪费 B+ 树的非叶子节点
		* MySql 的主键最好是自增的, 如果使用 UUID 这种, 每次插入都会调整 B+树, 从而导致页分裂, 严重影响性能

	



			

	

